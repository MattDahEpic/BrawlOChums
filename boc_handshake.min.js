var s=require("./boc_struct.js"),randomstring=require("randomstring");
module.exports=function(b,a){a.hasHandshook=!0;if("game"===b.type)for(a.clientType="game";;){if(b=randomstring.generate({length:4,readable:!0,charset:"alphanumeric",capitalization:"uppercase"}),!s.connections.has(b)){a.send('{"code":"'+b+'"}');a.gameCode=b;s.connections.set(b,new s.Session(a));break}}else"client"===b.type?"undefined"!==typeof b.code&&s.connections.has(b.code)?"undefined"===typeof b.name?(a.send('{"e":"Invalid or nonexistant name."}'),console.log("-Ended connection with "+a.upgradeReq.socket.remoteAddress+
" (4003)"),a.close(4003)):(a.clientType="client",a.gameCode=b.code,a.playerName=b.name,"undefined"===typeof b.identifier?generateClientIdentifier(a):(a.clientIdentifier=b.identifier,null===s.connections.get(a.gameCode).clients.get(a.clientIdentifier)?s.connections.get(a.gameCode).clients.set(a.clientIdentifier,a):generateClientIdentifier(a)),a.send('{"joingame":"true","identifier":"'+a.clientIdentifier+'"}')):(a.send('{"e":"Invalid game code."}'),console.log("-Ended connection with "+a.upgradeReq.socket.remoteAddress+
" (4001)"),a.close(4001)):(a.send('{"e":"Invalid type provided on handshake message."}'),console.log("-Ended connection with "+a.upgradeReq.socket.remoteAddress+" (4000)"),a.close(4E3))};
function generateClientIdentifier(b){do b.clientIdentifier=randomstring.generate({length:32,charset:"alphanumeric"});while(s.connections.get(b.gameCode).clients.has(b.clientIdentifier));s.connections.get(b.gameCode).clients.set(b.clientIdentifier,b);s.connections.get(b.gameCode).server.send('{"identifier":"'+b.clientIdentifier+'","name":"'+b.playerName+'"}')};
